on:
  workflow_call:
    inputs:
      dotnet-version:
        required: false
        default: "8.0.x"
        description: "The .NET version to setup for the build"
        type: string
      dotnet-target:
        required: false
        default: "net8.0"
        description: "The .NET target to set for JPRM"
        type: string
    secrets:
      deploy-host:
        required: true
      deploy-user:
        required: true
      deploy-key:
        required: true
      token:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          ref: 'unstable'

      - name: Setup .NET
        uses: actions/setup-dotnet@6bd8b7f7774af54e05809fcc5431931b3eb1ddee # v4.0.1
        with:
          dotnet-version: "${{ inputs.dotnet-version }}"

      - name: Update prerelease dependencies
        id: unstable
        run: |
          dotnet nuget add source --username jellyfin-bot --password ${{ secrets.token }} --store-password-in-clear-text --name jellyfin-pre "https://nuget.pkg.github.com/jellyfin/index.json"
          dotnet tool install --global dotnet-outdated-tool
          dotnet outdated -pre Always -u -inc Jellyfin

      - name: Generate version number using date and run number
        id: version-creator
        run: |
          pluginVersion=`yq '.version' build.yaml | tr -d '"'`
          buildDay=`date +%y%m`
          runNum=$GITHUB_RUN_NUMBER
          ver="${pluginVersion}.${buildDay}.${runNum}.0"
          echo "PLUGIN_VERSION=$ver" >> $GITHUB_OUTPUT

      - name: Build Jellyfin Plugin
        uses: oddstr13/jellyfin-plugin-repository-manager@9497a0a499416cc572ed2e07a391d9f943a37b4d # v1.1.1
        id: jprm
        with:
          dotnet-target: "${{ inputs.dotnet-target }}"
          version: ${{ steps.version-creator.outputs.PLUGIN_VERSION }}

      - name: Upload Artifact
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        with:
          name: build-artifact
          retention-days: 30
          if-no-files-found: error
          path: ${{ steps.jprm.outputs.artifact }}

  upload:
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: build-artifact

      - name: Ensure Destination Path Exists
        uses: appleboy/ssh-action@029f5b4aeeeb58fdfe1410a5d17f967dacf36262 # v1.0.3
        if: ${{ contains(github.repository, 'jellyfin/') }}
        with:
          host: ${{ secrets.deploy-host }}
          username: ${{ secrets.deploy-user }}
          key: ${{ secrets.deploy-key }}
          script_stop: true
          script: |-
            mkdir -p "/srv/incoming/plugin/${{ github.repository }}/${{ inputs.version }}" || exit 1

      - name: Upload Jellyfin Plugin Repository Assets
        uses: burnett01/rsync-deployments@0dc935cdecc5f5e571865e60d2a6cdc673704823 # tag=5.2
        if: ${{ contains(github.repository, 'jellyfin/') }}
        with:
          switches: -vrptz
          path: ./*.zip
          remote_path: /srv/incoming/plugin/${{ github.repository }}/${{ inputs.version }}
          remote_host: ${{ secrets.deploy-host }}
          remote_user: ${{ secrets.deploy-user }}
          remote_key: ${{ secrets.deploy-key }}

  publish:
    needs:
      - upload
    runs-on: ubuntu-latest
    if: ${{ contains(github.repository, 'jellyfin/') }}
    env:
      JELLYFIN_REPO: "/srv/repository/main/plugin-unstable/manifest.json"
      JELLYFIN_REPO_URL: "https://repo.jellyfin.org/files/plugin-unstable/"
    steps:
      - name: Update Plugin Manifest
        uses: appleboy/ssh-action@029f5b4aeeeb58fdfe1410a5d17f967dacf36262 # v1.0.3
        with:
          host: ${{ secrets.deploy-host }}
          username: ${{ secrets.deploy-user }}
          key: ${{ secrets.deploy-key }}
          script_stop: true
          envs: JELLYFIN_REPO,JELLYFIN_REPO_URL
          script: |-
            lockfile="/run/lock/jprm.lock"
            pushd "/srv/incoming/plugin/${{ github.repository }}/${{ inputs.version }}" || exit 1
            (
                flock -x 300
                sudo /usr/local/bin/jprm --verbosity=debug repo add --url="${JELLYFIN_REPO_URL}" "${JELLYFIN_REPO}" ./*.zip || exit 1
            ) 300>${lockfile}
            popd || exit 1
            rm -r "/srv/incoming/plugin/${{ github.repository }}/${{ inputs.version }}" || exit 1
