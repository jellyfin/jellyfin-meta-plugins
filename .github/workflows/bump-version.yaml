# DEPRECATED: Please use / rely on the changelog workflow as that works with protected branches

on:
  workflow_call:
    inputs:
      csproj-name:
        required: true
        type: string
      csproj-folder:
        required: false
        type: string
      is-unstable:
        required: false
        default: false
        type: boolean
      default-branch:
        required: false
        default: "master"
        description: "The branch to commit the version bump to"
        type: string
      commiter-name:
        required: false
        default: "jellyfin-bot"
        description: "This param overwrites the version bump committing git user.name"
        type: string
      commiter-email:
        required: false
        default: "team@jellyfin.org"
        description: "This param overwrites the version bump committing git user.email"
        type: string


jobs:
  bump-version:
    runs-on: ubuntu-latest
    if: ${{ ! inputs.isUnstable }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Read current version
        run: |-
          echo "CURRENT_VERSION=$(yq eval '.version' build.yaml)"
          echo "CURRENT_VERSION=$(yq eval '.version' build.yaml)" >> $GITHUB_ENV

      - name: Set next version
        run: |-
          # ensure even a version in schema 'x.y.z.b' is supported, yet only inc and persists the 'x' value further
          C_VERSION=${CURRENT_VERSION%%.*}
          CS_PROJ_NAME="${{ inputs.csproj-name }}"
          CS_PROJ_FOLDER="${{ inputs.csproj-folder }}"

          export NEXT_VERSION=$(( ${C_VERSION} + 1 ))
          echo "NEXT_VERSION=${NEXT_VERSION}"
          echo "NEXT_VERSION=${NEXT_VERSION}" >> $GITHUB_ENV

          yq eval '.version = env(NEXT_VERSION)' -i build.yaml
          sed -i ${CS_PROJ_FOLDER:-$CS_PROJ_NAME}/${CS_PROJ_NAME}.csproj \
            -e "s;<AssemblyVersion>.*</AssemblyVersion>;<AssemblyVersion>${NEXT_VERSION}.0.0.0</AssemblyVersion>;" \
            -e "s;<FileVersion>.*</FileVersion>;<FileVersion>${NEXT_VERSION}.0.0.0</FileVersion>;"

      - name: Commit bump
        run: |-
          git config user.name "${{ inputs.commiter-name }}"
          git config user.email "${{ inputs.commiter-email }}"
          git commit -am "chore: prepare for next release (v${NEXT_VERSION})"
          git push origin "HEAD:refs/heads/${{ inputs.default-branch }}"
