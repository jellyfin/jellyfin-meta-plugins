on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
      is-unstable:
        required: false
        default: false
        type: boolean
      dotnet-version:
        required: false
        default: "6.0.x"
        description: "The .NET version to setup for the build"
        type: string
      dotnet-target:
        required: false
        default: "net6.0"
        description: "The .NET target to set for JPRM"
        type: string
    secrets:
      deploy-host:
        required: true
      deploy-user:
        required: true
      deploy-key:
        required: true


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0

      - name: Setup .NET
        uses: actions/setup-dotnet@607fce577a46308457984d59e4954e075820f10a # tag=v3.0.3
        with:
          dotnet-version: "${{ inputs.dotnet-version }}"

      - name: Build Jellyfin Plugin
        uses: oddstr13/jellyfin-plugin-repository-manager@4a2b165a3dc2cfc392db865a85f23c02e9f78c68 # v0.5.1
        id: jprm
        with:
          dotnet-target: "${{ inputs.dotnet-target }}"

      - name: Upload Artifact
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        with:
          name: build-artifact
          retention-days: 30
          if-no-files-found: error
          path: ${{ steps.jprm.outputs.artifact }}

  upload:
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: build-artifact

      - name: Prepare GH Release Assets
        run: |-
          for file in ./*; do
            md5sum ${file#./} >> ${file%.*}.md5
            sha256sum ${file#./} >> ${file%.*}.sha256
          done
          ls -l

      - name: Upload GH Release Assets
        uses: shogo82148/actions-upload-release-asset@e94a7386c3c266a207386460471b1efb5c7431eb # tag=v1.6.3
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./*

      - name: Ensure Destination Path Exists
        uses: appleboy/ssh-action@d91a1af6f57cd4478ceee14d7705601dafabaa19 # v0.1.7
        if: ${{ contains(github.repository, 'jellyfin/') }}
        with:
          host: ${{ secrets.deploy-host }}
          username: ${{ secrets.deploy-user }}
          key: ${{ secrets.deploy-key }}
          script_stop: true
          script: |-
            mkdir -p "/srv/repository/incoming/plugin/${{ github.repository }}/${{ inputs.version }}" || exit 1

      - name: Upload Jellyfin Plugin Repository Assets
        uses: burnett01/rsync-deployments@0dc935cdecc5f5e571865e60d2a6cdc673704823 # tag=5.2
        if: ${{ contains(github.repository, 'jellyfin/') }}
        with:
          switches: -vrptz
          path: ./*.zip
          remote_path: /srv/repository/incoming/plugin/${{ github.repository }}/${{ inputs.version }}
          remote_host: ${{ secrets.deploy-host }}
          remote_user: ${{ secrets.deploy-user }}
          remote_key: ${{ secrets.deploy-key }}

  publish:
    needs:
      - upload
    runs-on: ubuntu-latest
    if: ${{ contains(github.repository, 'jellyfin/') }}
    env:
      JELLYFIN_REPO: "/srv/repository/mirror/releases/plugin/manifest-stable.json"
      JELLYFIN_REPO_URL: "https://repo.jellyfin.org/releases/plugin/"
    steps:
      - name: Update Plugin Manifest
        uses: appleboy/ssh-action@d91a1af6f57cd4478ceee14d7705601dafabaa19 # v0.1.7
        with:
          host: ${{ secrets.deploy-host }}
          username: ${{ secrets.deploy-user }}
          key: ${{ secrets.deploy-key }}
          script_stop: true
          envs: JELLYFIN_REPO,JELLYFIN_REPO_URL
          script: |-
            lockfile="/run/lock/jprm.lock"
            pushd "/srv/repository/incoming/plugin/${{ github.repository }}/${{ inputs.version }}" || exit 1
            (
                flock -x 300
                jprm --verbosity=debug repo add --url="${JELLYFIN_REPO_URL}" "${JELLYFIN_REPO}" ./*.zip || exit 1
            ) 300>${lockfile}
            popd || exit 1
            rm -r "/srv/repository/incoming/plugin/${{ github.repository }}/${{ inputs.version }}" || exit 1
